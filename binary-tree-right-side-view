/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        deque<TreeNode*>dq;
        vector<int>v;
        if(root==nullptr) return v;
        dq.push_back(root);
        while(dq.size()>0){
            int n=dq.size();
            for(int i=0;i<n;i++){
                TreeNode *cur=dq.front();
                dq.pop_front();
                if(i==(n-1)) v.push_back(cur->val);
                if(cur->left!=nullptr) dq.push_back(cur->left);
                if(cur->right!=nullptr) dq.push_back(cur->right);
            }
            
           
        }
        return v;
    }
};
