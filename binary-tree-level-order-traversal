/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void spiral(deque<TreeNode *>dq,deque<TreeNode *>q,vector<vector<int>>&v){
    if(dq.size()==0) return;
    if(dq.front()==nullptr) return ;
    vector<int>vv;
    while(dq.size()>0){
        TreeNode *cur=dq.front();
        dq.pop_front();
        if(cur->left!=nullptr) { vv.push_back(cur->left->val); q.push_back(cur->left); }
        if(cur->right!=nullptr) { vv.push_back(cur->right->val); q.push_back(cur->right); }
    }
    if(vv.size()>0)  v.push_back(vv);
    spiral(q,dq,v);
}
    vector<vector<int>> levelOrder(TreeNode* root) {
        deque<TreeNode *>dq,q;
        dq.push_front(root);
        vector<vector<int>>v;
        if(root!=nullptr) v.push_back({root->val});
        spiral(dq,q,v);
        return v;
        
    }
};
